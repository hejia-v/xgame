package com.hejia.android.clientfoundation;

import java.util.UUID;

import android.content.Context;
import android.content.SharedPreferences;
import android.provider.Settings.Secure;
import android.telephony.TelephonyManager;
import android.text.TextUtils;


public class DeviceUuidFactory {
    protected static final String PREFS_FILE = "device_id.xml";
    protected static final String PREFS_DEVICE_ID = "device_id";
    protected static final String PREFS_ANDROID_ID = "android_id";

    protected static String device_id = null;
    protected static String android_id = null;

    public DeviceUuidFactory(Context context) {

        if (TextUtils.isEmpty(device_id) || TextUtils.isEmpty(android_id)) {

            synchronized (DeviceUuidFactory.class) {
                final SharedPreferences prefs = context.getSharedPreferences(PREFS_FILE, 0);
                device_id = prefs.getString(PREFS_DEVICE_ID, null);
                android_id = prefs.getString(PREFS_ANDROID_ID, null);
                if (TextUtils.isEmpty(device_id) || TextUtils.isEmpty(android_id)) {
                    android_id = Secure.getString(context.getContentResolver(), Secure.ANDROID_ID);
                    device_id = ((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE)).getDeviceId();
                    if (TextUtils.isEmpty(android_id) || "9774d56d682e549c".equals(android_id)) {
                        if (TextUtils.isEmpty(device_id)) {
                            android_id = UUID.randomUUID().toString();
                        } else {
                            android_id = device_id;
                        }
                    }
                    if (TextUtils.isEmpty(device_id)) {
                        device_id = android_id;
                    }
                    prefs.edit().putString(PREFS_DEVICE_ID, device_id).commit();
                    prefs.edit().putString(PREFS_ANDROID_ID, android_id).commit();
                }

            }
        }
    }


    /**
     * Returns a unique UUID for the current android device.  As with all UUIDs, this unique ID is "very highly likely"
     * to be unique across all Android devices.  Much more so than ANDROID_ID is.
     *
     * The UUID is generated by using ANDROID_ID as the base key if appropriate, falling back on
     * TelephonyManager.getDeviceID() if ANDROID_ID is known to be incorrect, and finally falling back
     * on a random UUID that's persisted to SharedPreferences if getDeviceID() does not return a
     * usable value.
     *
     * In some rare circumstances, this ID may change.  In particular, if the device is factory reset a new device ID
     * may be generated.  In addition, if a user upgrades their phone from certain buggy implementations of Android 2.2
     * to a newer, non-buggy version of Android, the device ID may change.  Or, if a user uninstalls your app on
     * a device that has neither a proper Android ID nor a Device ID, this ID may change on reinstallation.
     *
     * Note that if the code falls back on using TelephonyManager.getDeviceId(), the resulting ID will NOT
     * change after a factory reset.  Something to be aware of.
     *
     * Works around a bug in Android 2.2 for many devices when using ANDROID_ID directly.
     *
     * @see http://code.google.com/p/android/issues/detail?id=10603
     *
     * @return a UUID that may be used to uniquely identify your device for most purposes.
     */
    public String getDeviceId() {
        return device_id;
    }

    public String getAndroidId() {
        return android_id;
    }

}
